#include <iostream>
#include <string>
using namespace std;

const int SIZE = 5;

template <class T>
class Stack {
    T arr[SIZE];
    int top;

public:
    Stack() {
        top = -1;
    }

    void push(T item) {
        if (top >= SIZE - 1)
            throw string("stack is full.");
        arr[++top] = item;
    }

    T pop() {
        if (top < 0)
            throw string("stack is empty, cannot pop");
        return arr[top--];
    }

    void display() {
        if (top < 0) {
            cout << "Stack is empty.\n";
            return;
        }

        cout << "Stack contents: ";
        for (int i = top; i >= 0; i--)
            cout << arr[i] << " ";
        cout << endl;
    }
};

int main() {
    Stack<int> s;

   
    try {
        s.push(2);
        s.push(7);
        s.push(9);
        s.push(11);
        s.push(17);
        s.push(99);  
    }
    catch (string e) {
        cout << "Exception: " << e << endl;
    }

    s.display();

  
    try {
        cout << "Popped: " << s.pop() << endl;
        cout << "Popped: " << s.pop() << endl;
        cout << "Popped: " << s.pop() << endl;
        cout << "Popped: " << s.pop() << endl;
        cout << "Popped: " << s.pop() << endl;
        cout << "Popped: " << s.pop() << endl; 
    }
    catch (string e) {
        cout << "Exception: " << e << endl;
    }

    return 0;
}
